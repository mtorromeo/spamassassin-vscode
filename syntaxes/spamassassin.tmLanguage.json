{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SpamAssassin",
	"patterns": [
		{
			"match": "(?i)^\\s*(score)\\s+([a-z0-9_]+)\\s+(-?[0-9]+(?:\\.[0-9]+)?)$",
			"captures": {
				"1": {
					"name": "entity.name.function.spamassassin"
				},
				"2": {
					"name": "variable.name.spamassassin"
				},
				"3": {
					"name": "constant.numeric.spamassassin"
				}
			}
		},
		{
			"match": "(?i)^\\s*(describe)\\s+([a-z0-9_]+)\\s+(.*)$",
			"captures": {
				"1": {
					"name": "entity.name.function.spamassassin"
				},
				"2": {
					"name": "variable.name.spamassassin"
				},
				"3": {
					"name": "string.unquoted.spamassassin"
				}
			}
		},
		{
			"match": "(?i)^\\s*(header)\\s+([a-z0-9_]+)(.*)$",
			"captures": {
				"1": {
					"name": "entity.name.function.spamassassin"
				},
				"2": {
					"name": "variable.name.spamassassin"
				},
				"3": {
					"patterns": [
						{
							"match": "(?i)\\s+([a-z][a-z0-9-]*)\\s+([=!]\\~)\\s+(.*)$",
							"captures": {
								"1": {
									"name": "support.type.property-name.spamassassin"
								},
								"2": {
									"name": "keyword.operator.spamassassin"
								},
								"3": {
									"patterns": [
										{
											"include": "#regex"
										}
									]
								}
							}
						},
						{
							"include": "#perl-eval"
						}
					]
				}
			}
		},
		{
			"match": "(?i)^\\s*(uri)\\s+([a-z0-9_]+)\\s+(.*)$",
			"captures": {
				"1": {
					"name": "entity.name.function.spamassassin"
				},
				"2": {
					"name": "variable.name.spamassassin"
				},
				"3": {
					"patterns": [
						{
							"include": "#regex"
						}
					]
				}
			}
		},
		{
			"match": "(?i)^\\s*(meta)\\s+([a-z0-9_]+)(.*)$",
			"captures": {
				"1": {
					"name": "entity.name.function.spamassassin"
				},
				"2": {
					"name": "variable.name.spamassassin"
				},
				"3": {
					"patterns": [
						{
							"include": "#javascript"
						}
					]
				}
			}
		},
		{
			"match": "^\\s*#.*",
			"name": "comment.spamassassin"
		}
	],
	"repository": {
		"regex": {
			"patterns": [
				{
					"name": "string.regexp.spamassassin",
					"begin": "([gimsuy]*)([^a-z0-9])",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.js"
						},
						"2": {
							"name": "punctuation.definition.string.begin.spamassassin"
						}
					},
					"end": "([^a-z0-9])([gimsuy]*)$",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.spamassassin"
						},
						"2": {
							"name": "keyword.other.js"
						}
					},
					"patterns": [
						{
							"include": "source.js.regexp"
						}
					],
					"contentName": "source.js.regexp"
				}
			]
		},
		"javascript": {
			"patterns": [
				{
					"begin": "\\b",
					"end": "$",
					"patterns": [
						{
							"include": "source.js"
						}
					],
					"contentName": "source.js"
				}
			]
		},
		"perl-eval": {
			"patterns": [
				{
					"begin": "eval:",
					"end": "$",
					"patterns": [
						{
							"include": "source.perl"
						}
					],
					"contentName": "source.perl"
				}
			]
		}
	},
	"scopeName": "source.spamassassin"
}
